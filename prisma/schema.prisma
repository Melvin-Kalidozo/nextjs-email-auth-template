generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* ---------- USER TABLE ---------- */
model User {
  id            String        @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  role          String?        // e.g. "ADMIN", "EDITOR", "USER"
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // Relations
  posts         Post[]         // one-to-many (user can create many posts)
  teamMembers   TeamMember[]   // one-to-many (user can create many team members)
}

/* ---------- POST TABLE (BLOG & NEWS) ---------- */
model Post {
  id             String      @id @default(cuid())
  title          String
  slug           String      @unique
  excerpt        String?
  content        String
  coverImage     String?
  type           PostType    // BLOG or NEWS
  status         PostStatus  @default(DRAFT)
  authorName     String?     // optional manual author name
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // Relation to user (creator)
  createdById    String
  createdBy      User        @relation(fields: [createdById], references: [id])
}

/* ---------- TEAM MEMBERS TABLE ---------- */
model TeamMember {
  id             String      @id @default(cuid())
  name           String
  position       String
  bio            String
  imageUrl       String
  isLeadership   Boolean     @default(false)
  order          Int?        @default(0)
  createdAt      DateTime    @default(now())

  // Relation to user (creator)
  createdById    String
  createdBy      User        @relation(fields: [createdById], references: [id])
}

/* ---------- ENUMS ---------- */
enum PostType {
  BLOG
  NEWS
}

enum PostStatus {
  DRAFT
  PUBLISHED
}
